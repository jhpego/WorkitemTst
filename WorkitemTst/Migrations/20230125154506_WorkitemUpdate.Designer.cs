// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkitemTst.Models;

#nullable disable

namespace WorkitemTst.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230125154506_WorkitemUpdate")]
    partial class WorkitemUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkitemTst.Models.Sample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("identifier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SampleSet");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("WIFormId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WIFormId");

                    b.ToTable("WIField");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("WIForm");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("WITypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WITypeId");

                    b.ToTable("WIRelation");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WIType");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WIFieldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WIFieldId");

                    b.ToTable("WIValue");
                });

            modelBuilder.Entity("WorkitemTst.Models.Workitem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("WITypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("WITypeId");

                    b.ToTable("Workitems");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIField", b =>
                {
                    b.HasOne("WorkitemTst.Models.WIForm", null)
                        .WithMany("Fields")
                        .HasForeignKey("WIFormId");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIRelation", b =>
                {
                    b.HasOne("WorkitemTst.Models.WIType", null)
                        .WithMany("Relations")
                        .HasForeignKey("WITypeId");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIValue", b =>
                {
                    b.HasOne("WorkitemTst.Models.WIField", null)
                        .WithMany("Value")
                        .HasForeignKey("WIFieldId");
                });

            modelBuilder.Entity("WorkitemTst.Models.Workitem", b =>
                {
                    b.HasOne("WorkitemTst.Models.WIForm", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkitemTst.Models.WIType", "WIType")
                        .WithMany()
                        .HasForeignKey("WITypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("WIType");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIField", b =>
                {
                    b.Navigation("Value");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIForm", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("WorkitemTst.Models.WIType", b =>
                {
                    b.Navigation("Relations");
                });
#pragma warning restore 612, 618
        }
    }
}
